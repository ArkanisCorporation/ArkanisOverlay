// <auto-generated />
using System;
using ArkanisOverlay.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArkanisOverlay.Migrations
{
    [DbContext(typeof(UEXContext))]
    [Migration("20250402220853_Add VehiclesRentalsPricesAllEntity")]
    partial class AddVehiclesRentalsPricesAllEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("ArkanisOverlay.Data.Entities.UEX.CacheInfo", b =>
                {
                    b.Property<string>("TypeName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApiPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.HasKey("TypeName");

                    b.ToTable("CacheInfos");
                });

            modelBuilder.Entity("ArkanisOverlay.Data.Entities.UEX.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<DateTimeOffset>("DateAdded")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_added");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_modified");

                    b.Property<bool?>("IsGameRelated")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_game_related");

                    b.Property<bool?>("IsMining")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_mining");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("Section")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "section");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ArkanisOverlay.Data.Entities.UEX.CommoditiesPricesAllEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("CommodityCode")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "commodity_code");

                    b.Property<string>("CommodityName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "commodity_name");

                    b.Property<string>("CommoditySlug")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "commodity_slug");

                    b.Property<DateTimeOffset>("DateAdded")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_added");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_modified");

                    b.Property<int>("IdCommodity")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_commodity");

                    b.Property<int>("IdTerminal")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_terminal");

                    b.Property<decimal>("PriceBuy")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_buy");

                    b.Property<decimal>("PriceBuyAvg")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_buy_avg");

                    b.Property<decimal>("PriceSell")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_sell");

                    b.Property<decimal>("PriceSellAvg")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_sell_avg");

                    b.Property<decimal>("ScuBuy")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "scu_buy");

                    b.Property<decimal>("ScuBuyAvg")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "scu_buy_avg");

                    b.Property<decimal>("ScuSell")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "scu_sell");

                    b.Property<decimal>("ScuSellAvg")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "scu_sell_avg");

                    b.Property<decimal>("ScuSellStock")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "scu_sell_stock");

                    b.Property<decimal>("ScuSellStockAvg")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "scu_sell_stock_avg");

                    b.Property<int?>("StatusBuy")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "status_buy");

                    b.Property<int?>("StatusSell")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "status_sell");

                    b.Property<string>("TerminalCode")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "terminal_code");

                    b.Property<string>("TerminalName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "terminal_name");

                    b.Property<string>("TerminalSlug")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "terminal_slug");

                    b.HasKey("Id");

                    b.ToTable("CommoditiesPricesAll");
                });

            modelBuilder.Entity("ArkanisOverlay.Data.Entities.UEX.CommoditiesRawPricesAllEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("CommodityCode")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "commodity_code");

                    b.Property<string>("CommodityName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "commodity_name");

                    b.Property<string>("CommoditySlug")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "commodity_slug");

                    b.Property<DateTimeOffset>("DateAdded")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_added");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_modified");

                    b.Property<int>("IdCommodity")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_commodity");

                    b.Property<int>("IdTerminal")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_terminal");

                    b.Property<decimal>("PriceSell")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_sell");

                    b.Property<decimal>("PriceSellAvg")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_sell_avg");

                    b.Property<string>("TerminalCode")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "terminal_code");

                    b.Property<string>("TerminalName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "terminal_name");

                    b.Property<string>("TerminalSlug")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "terminal_slug");

                    b.HasKey("Id");

                    b.ToTable("CommoditiesRawPricesAll");
                });

            modelBuilder.Entity("ArkanisOverlay.Data.Entities.UEX.CommodityEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "code");

                    b.Property<DateTimeOffset>("DateAdded")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_added");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_modified");

                    b.Property<int>("IdParent")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_parent");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_available");

                    b.Property<bool>("IsAvailableLive")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_available_live");

                    b.Property<bool>("IsBuyable")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_buyable");

                    b.Property<bool>("IsFuel")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_fuel");

                    b.Property<bool>("IsHarvestable")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_harvestable");

                    b.Property<bool>("IsIllegal")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_illegal");

                    b.Property<bool>("IsMineral")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_mineral");

                    b.Property<bool>("IsRaw")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_raw");

                    b.Property<bool>("IsRefined")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_refined");

                    b.Property<bool>("IsSellable")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_sellable");

                    b.Property<bool>("IsTemporary")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_temporary");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_visible");

                    b.Property<string>("Kind")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "kind");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<decimal>("PriceBuy")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_buy");

                    b.Property<decimal>("PriceSell")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_sell");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "slug");

                    b.Property<decimal>("WeightScu")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "weight_scu");

                    b.Property<string>("Wiki")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "wiki");

                    b.HasKey("Id");

                    b.ToTable("Commodities");
                });

            modelBuilder.Entity("ArkanisOverlay.Data.Entities.UEX.ItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "category");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "company_name");

                    b.Property<DateTimeOffset>("DateAdded")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_added");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_modified");

                    b.Property<int?>("IdCategory")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_category");

                    b.Property<int?>("IdCompany")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_company");

                    b.Property<int?>("IdParent")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_parent");

                    b.Property<int?>("IdVehicle")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_vehicle");

                    b.Property<bool>("IsExclusiveConcierge")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_exclusive_concierge");

                    b.Property<bool>("IsExclusivePledge")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_exclusive_pledge");

                    b.Property<bool>("IsExclusiveSubscriber")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_exclusive_subscriber");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("Section")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "section");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "slug");

                    b.Property<string>("UrlStore")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "url_store");

                    b.Property<string>("Uuid")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "uuid");

                    b.Property<string>("VehicleName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "vehicle_name");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("ArkanisOverlay.Data.Entities.UEX.ItemsPricesAllEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("CityName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "city_name");

                    b.Property<DateTimeOffset>("DateAdded")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_added");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_modified");

                    b.Property<decimal>("Durability")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "durability");

                    b.Property<decimal>("DurabilityAvg")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "durability_avg");

                    b.Property<decimal>("DurabilityAvgMonth")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "durability_avg_month");

                    b.Property<decimal>("DurabilityAvgWeek")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "durability_avg_week");

                    b.Property<decimal>("DurabilityMax")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "durability_max");

                    b.Property<decimal>("DurabilityMaxMonth")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "durability_max_month");

                    b.Property<decimal>("DurabilityMaxWeek")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "durability_max_week");

                    b.Property<decimal>("DurabilityMin")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "durability_min");

                    b.Property<decimal>("DurabilityMinMonth")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "durability_min_month");

                    b.Property<decimal>("DurabilityMinWeek")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "durability_min_week");

                    b.Property<int>("FactionAffinity")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "faction_affinity");

                    b.Property<string>("GameVersion")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "game_version");

                    b.Property<int>("IdCategory")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_category");

                    b.Property<int>("IdCity")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_city");

                    b.Property<int>("IdFaction")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_faction");

                    b.Property<int>("IdItem")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_item");

                    b.Property<int>("IdMoon")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_moon");

                    b.Property<int>("IdOrbit")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_orbit");

                    b.Property<int>("IdOutpost")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_outpost");

                    b.Property<int>("IdParent")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_parent");

                    b.Property<int>("IdPlanet")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_planet");

                    b.Property<int>("IdPoi")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_poi");

                    b.Property<int>("IdStarSystem")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_star_system");

                    b.Property<int>("IdTerminal")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_terminal");

                    b.Property<int>("IdVehicle")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_vehicle");

                    b.Property<string>("ItemName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "item_name");

                    b.Property<string>("MoonName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "moon_name");

                    b.Property<string>("OrbitName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "orbit_name");

                    b.Property<string>("OutpostName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "outpost_name");

                    b.Property<string>("PlanetName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "planet_name");

                    b.Property<decimal>("PriceBuy")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_buy");

                    b.Property<decimal>("PriceBuyAvg")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_buy_avg");

                    b.Property<decimal>("PriceBuyAvgMonth")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_buy_avg_month");

                    b.Property<decimal>("PriceBuyAvgWeek")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_buy_avg_week");

                    b.Property<decimal>("PriceBuyMax")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_buy_max");

                    b.Property<decimal>("PriceBuyMaxMonth")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_buy_max_month");

                    b.Property<decimal>("PriceBuyMaxWeek")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_buy_max_week");

                    b.Property<decimal>("PriceBuyMin")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_buy_min");

                    b.Property<decimal>("PriceBuyMinMonth")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_buy_min_month");

                    b.Property<decimal>("PriceBuyMinWeek")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_buy_min_week");

                    b.Property<decimal>("PriceSell")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_sell");

                    b.Property<decimal>("PriceSellAvg")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_sell_avg");

                    b.Property<decimal>("PriceSellAvgMonth")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_sell_avg_month");

                    b.Property<decimal>("PriceSellAvgWeek")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_sell_avg_week");

                    b.Property<decimal>("PriceSellMax")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_sell_max");

                    b.Property<decimal>("PriceSellMaxMonth")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_sell_max_month");

                    b.Property<decimal>("PriceSellMaxWeek")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_sell_max_week");

                    b.Property<decimal>("PriceSellMin")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_sell_min");

                    b.Property<decimal>("PriceSellMinMonth")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_sell_min_month");

                    b.Property<decimal>("PriceSellMinWeek")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_sell_min_week");

                    b.Property<string>("SpaceStationName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "space_station_name");

                    b.Property<string>("StarSystemName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "star_system_name");

                    b.Property<string>("TerminalCode")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "terminal_code");

                    b.Property<int>("TerminalIsPlayerOwned")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "terminal_is_player_owned");

                    b.Property<string>("TerminalName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "terminal_name");

                    b.HasKey("Id");

                    b.ToTable("ItemsPricesAll");
                });

            modelBuilder.Entity("ArkanisOverlay.Data.Entities.UEX.VehicleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "company_name");

                    b.Property<string>("ContainerSizes")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "container_sizes");

                    b.Property<string>("Crew")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "crew");

                    b.Property<DateTimeOffset>("DateAdded")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_added");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_modified");

                    b.Property<decimal>("FuelHydrogen")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "fuel_hydrogen");

                    b.Property<decimal>("FuelQuantum")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "fuel_quantum");

                    b.Property<string>("GameVersion")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "game_version");

                    b.Property<decimal>("Height")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "height");

                    b.Property<int>("IdCompany")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_company");

                    b.Property<int>("IdParent")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_parent");

                    b.Property<string>("IdsVehiclesLoaners")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "ids_vehicles_loaners");

                    b.Property<bool>("IsAddon")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_addon");

                    b.Property<bool>("IsBoarding")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_boarding");

                    b.Property<bool>("IsBomber")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_bomber");

                    b.Property<bool>("IsCargo")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_cargo");

                    b.Property<bool>("IsCarrier")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_carrier");

                    b.Property<bool>("IsCivilian")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_civilian");

                    b.Property<bool>("IsConcept")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_concept");

                    b.Property<bool>("IsConstruction")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_construction");

                    b.Property<bool>("IsDatarunner")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_datarunner");

                    b.Property<bool>("IsDocking")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_docking");

                    b.Property<bool>("IsEmp")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_emp");

                    b.Property<bool>("IsExploration")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_exploration");

                    b.Property<bool>("IsGroundVehicle")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_ground_vehicle");

                    b.Property<bool>("IsHangar")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_hangar");

                    b.Property<bool>("IsIndustrial")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_industrial");

                    b.Property<bool>("IsInterdiction")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_interdiction");

                    b.Property<bool>("IsLoadingDock")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_loading_dock");

                    b.Property<bool>("IsMedical")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_medical");

                    b.Property<bool>("IsMilitary")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_military");

                    b.Property<bool>("IsMining")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_mining");

                    b.Property<bool>("IsPassenger")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_passenger");

                    b.Property<bool>("IsQed")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_qed");

                    b.Property<bool>("IsRacing")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_racing");

                    b.Property<bool>("IsRefinery")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_refinery");

                    b.Property<bool>("IsRefuel")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_refuel");

                    b.Property<bool>("IsRepair")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_repair");

                    b.Property<bool>("IsResearch")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_research");

                    b.Property<bool>("IsSalvage")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_salvage");

                    b.Property<bool>("IsScanning")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_scanning");

                    b.Property<bool>("IsScience")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_science");

                    b.Property<bool>("IsShowdownWinner")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_showdown_winner");

                    b.Property<bool>("IsSpaceship")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_spaceship");

                    b.Property<bool>("IsStarter")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_starter");

                    b.Property<bool>("IsStealth")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_stealth");

                    b.Property<bool>("IsTractorBeam")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_tractor_beam");

                    b.Property<decimal>("Length")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "length");

                    b.Property<decimal>("Mass")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "mass");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("NameFull")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "name_full");

                    b.Property<string>("PadType")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "pad_type");

                    b.Property<decimal>("Scu")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "scu");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "slug");

                    b.Property<string>("UrlBrochure")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "url_brochure");

                    b.Property<string>("UrlHotsite")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "url_hotsite");

                    b.Property<string>("UrlPhotos")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "url_photos");

                    b.Property<string>("UrlStore")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "url_store");

                    b.Property<string>("UrlVideo")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "url_video");

                    b.Property<string>("Uuid")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "uuid");

                    b.Property<decimal>("Width")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "width");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("ArkanisOverlay.Data.Entities.UEX.VehiclesPurchasesPricesAllEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<DateTimeOffset>("DateAdded")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_added");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_modified");

                    b.Property<int>("IdTerminal")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_terminal");

                    b.Property<int>("IdVehicle")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_vehicle");

                    b.Property<decimal>("PriceBuy")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price_buy");

                    b.Property<string>("TerminalName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "terminal_name");

                    b.Property<string>("VehicleName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "vehicle_name");

                    b.HasKey("Id");

                    b.ToTable("VehiclesPurchasesPricesAll");
                });

            modelBuilder.Entity("ArkanisOverlay.Data.Entities.UEX.VehiclesRentalsPricesAllEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<DateTimeOffset>("DateAdded")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_added");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_modified");

                    b.Property<int>("IdTerminal")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_terminal");

                    b.Property<int>("IdVehicle")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_vehicle");

                    b.Property<float>("PriceRent")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "price_rent");

                    b.Property<string>("TerminalName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "terminal_name");

                    b.Property<string>("VehicleName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "vehicle_name");

                    b.HasKey("Id");

                    b.ToTable("VehiclesRentalsPricesAll");
                });
#pragma warning restore 612, 618
        }
    }
}
