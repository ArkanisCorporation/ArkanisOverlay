// <auto-generated />
using System;
using ArkanisOverlay.Data.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArkanisOverlay.Migrations
{
    [DbContext(typeof(UEXContext))]
    [Migration("20250218083529_Vehicles")]
    partial class Vehicles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("ArkanisOverlay.Data.UEX.DTO.CommodityDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "code");

                    b.Property<DateTimeOffset>("DateAdded")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_added");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_modified");

                    b.Property<int>("IdParent")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_parent");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_available");

                    b.Property<bool>("IsAvailableLive")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_available_live");

                    b.Property<bool>("IsBuyable")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_buyable");

                    b.Property<bool>("IsFuel")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_fuel");

                    b.Property<bool>("IsHarvestable")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_harvestable");

                    b.Property<bool>("IsIllegal")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_illegal");

                    b.Property<bool>("IsMineral")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_mineral");

                    b.Property<bool>("IsRaw")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_raw");

                    b.Property<bool>("IsRefined")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_refined");

                    b.Property<bool>("IsSellable")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_sellable");

                    b.Property<bool>("IsTemporary")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_temporary");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_visible");

                    b.Property<string>("Kind")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "kind");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<float>("PriceBuy")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "price_buy");

                    b.Property<float>("PriceSell")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "price_sell");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "slug");

                    b.Property<float>("WeightScu")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "weight_scu");

                    b.Property<string>("Wiki")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "wiki");

                    b.HasKey("Id");

                    b.ToTable("Commodities");
                });

            modelBuilder.Entity("ArkanisOverlay.Data.UEX.DTO.VehicleDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "company_name");

                    b.Property<string>("ContainerSizes")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "container_sizes");

                    b.Property<string>("Crew")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "crew");

                    b.Property<DateTimeOffset>("DateAdded")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_added");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_modified");

                    b.Property<int>("FuelHydrogen")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "fuel_hydrogen");

                    b.Property<int>("FuelQuantum")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "fuel_quantum");

                    b.Property<string>("GameVersion")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "game_version");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "height");

                    b.Property<int>("IdCompany")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_company");

                    b.Property<int>("IdParent")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_parent");

                    b.Property<string>("IdsVehiclesLoaners")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "ids_vehicles_loaners");

                    b.Property<int>("IsAddon")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_addon");

                    b.Property<int>("IsBoarding")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_boarding");

                    b.Property<int>("IsBomber")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_bomber");

                    b.Property<int>("IsCargo")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_cargo");

                    b.Property<int>("IsCarrier")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_carrier");

                    b.Property<int>("IsCivilian")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_civilian");

                    b.Property<int>("IsConcept")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_concept");

                    b.Property<int>("IsConstruction")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_construction");

                    b.Property<int>("IsDatarunner")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_datarunner");

                    b.Property<int>("IsDocking")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_docking");

                    b.Property<int>("IsEmp")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_emp");

                    b.Property<int>("IsExploration")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_exploration");

                    b.Property<int>("IsGroundVehicle")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_ground_vehicle");

                    b.Property<int>("IsHangar")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_hangar");

                    b.Property<int>("IsIndustrial")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_industrial");

                    b.Property<int>("IsInterdiction")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_interdiction");

                    b.Property<int>("IsLoadingDock")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_loading_dock");

                    b.Property<int>("IsMedical")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_medical");

                    b.Property<int>("IsMilitary")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_military");

                    b.Property<int>("IsMining")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_mining");

                    b.Property<int>("IsPassenger")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_passenger");

                    b.Property<int>("IsQed")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_qed");

                    b.Property<int>("IsRacing")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_racing");

                    b.Property<int>("IsRefinery")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_refinery");

                    b.Property<int>("IsRefuel")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_refuel");

                    b.Property<int>("IsRepair")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_repair");

                    b.Property<int>("IsResearch")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_research");

                    b.Property<int>("IsSalvage")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_salvage");

                    b.Property<int>("IsScanning")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_scanning");

                    b.Property<int>("IsScience")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_science");

                    b.Property<int>("IsShowdownWinner")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_showdown_winner");

                    b.Property<int>("IsSpaceship")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_spaceship");

                    b.Property<int>("IsStarter")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_starter");

                    b.Property<int>("IsStealth")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_stealth");

                    b.Property<int>("IsTractorBeam")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_tractor_beam");

                    b.Property<int>("Length")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "length");

                    b.Property<int>("Mass")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "mass");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("NameFull")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "name_full");

                    b.Property<string>("PadType")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "pad_type");

                    b.Property<int>("Scu")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "scu");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "slug");

                    b.Property<string>("UrlBrochure")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "url_brochure");

                    b.Property<string>("UrlHotsite")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "url_hotsite");

                    b.Property<string>("UrlPhotos")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "url_photos");

                    b.Property<string>("UrlStore")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "url_store");

                    b.Property<string>("UrlVideo")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "url_video");

                    b.Property<string>("Uuid")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "uuid");

                    b.Property<int>("Width")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "width");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
