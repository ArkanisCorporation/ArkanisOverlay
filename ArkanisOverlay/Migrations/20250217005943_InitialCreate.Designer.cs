// <auto-generated />
using System;
using ArkanisOverlay.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArkanisOverlay.Migrations
{
    [DbContext(typeof(UEXContext))]
    [Migration("20250217005943_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("ArkanisOverlay.Data.UEX.DTO.CommodityDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "code");

                    b.Property<DateTimeOffset>("DateAdded")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_added");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_modified");

                    b.Property<int>("IdParent")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id_parent");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_available");

                    b.Property<bool>("IsAvailableLive")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_available_live");

                    b.Property<bool>("IsBuyable")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_buyable");

                    b.Property<bool>("IsFuel")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_fuel");

                    b.Property<bool>("IsHarvestable")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_harvestable");

                    b.Property<bool>("IsIllegal")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_illegal");

                    b.Property<bool>("IsMineral")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_mineral");

                    b.Property<bool>("IsRaw")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_raw");

                    b.Property<bool>("IsRefined")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_refined");

                    b.Property<bool>("IsSellable")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_sellable");

                    b.Property<bool>("IsTemporary")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_temporary");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_visible");

                    b.Property<string>("Kind")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "kind");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<float>("PriceBuy")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "price_buy");

                    b.Property<float>("PriceSell")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "price_sell");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "slug");

                    b.Property<float>("WeightScu")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "weight_scu");

                    b.Property<string>("Wiki")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "wiki");

                    b.HasKey("Id");

                    b.ToTable("Commodities");
                });
#pragma warning restore 612, 618
        }
    }
}
