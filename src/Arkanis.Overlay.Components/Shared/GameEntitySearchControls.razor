@using Arkanis.Overlay.Domain.Abstractions.Game
@using Arkanis.Overlay.Domain.Models.Keyboard
<MudStack Spacing="2"
          AlignItems="@AlignItems.Center"
          Justify="@Justify.FlexEnd"
          Class="mr-n2"
          Style="height: 46px;"
          Row>
    @if (Model is IGameLocation gameLocation)
    {
        var isSelectedLocation = SearchContext.CurrentLocation == gameLocation;
        var color = isSelectedLocation ? Color.Error : Color.Tertiary;
        var icon = isSelectedLocation ? MaterialSymbols.Outlined.FilterAltOff : MaterialSymbols.Outlined.TravelExplore;
        var callback = () => isSelectedLocation
            ? SearchContext.ClearLocationFilterAsync()
            : SearchContext.SetFilterAsync(gameLocation);

        <MudDivider Vertical FlexItem/>
        <KeyboardShortcutBadge Key="@KeyboardKey.Enter"
                               Origin="@Origin.BottomCenter"
                               Color="@color"
                               IsActive="IsFocused"
                               OnKeyPress="@callback">
            <MudIconButton
                Icon="@icon"
                OnClick="@callback"
                Class="focus"
                tabindex="1"/>
        </KeyboardShortcutBadge>
    }
    @if (Model is IGamePurchasable)
    {
        <MudDivider Vertical FlexItem/>
        <MudIconButton
            Icon="@MaterialSymbols.Outlined.AddShoppingCart"
            Class="focus"
            tabindex="1"
            Disabled/>
    }
    @if (Model is IGameSellable)
    {
        <MudDivider Vertical FlexItem/>
        <MudIconButton
            Icon="@MaterialSymbols.Outlined.RemoveShoppingCart"
            Class="focus"
            tabindex="1"
            Disabled/>
    }
    @if (Model is IGameRentable)
    {
        <MudDivider Vertical FlexItem/>
        <MudIconButton
            Icon="@MaterialSymbols.Outlined.HourglassTop"
            Class="focus"
            tabindex="1"
            Disabled/>
    }
</MudStack>

@code
{

    [CascadingParameter]
    public required OverlaySearchContext SearchContext { get; set; }

    [Parameter]
    public required IGameEntity Model { get; set; }

    [Parameter]
    public bool IsFocused { get; set; }

}
