@using Arkanis.Overlay.Infrastructure.Helpers
<MudDialog>
    <TitleContent>
        <MudText Typo="@Typo.h6">
            ðŸŽ‰ Arkanis Corporation celebrates its 1st birthday! ðŸŽ‰
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudStack>
            <MudText>
                Join us in celebrating a year of innovation, community, and growth at Arkanis Corporation!
                A short word from organization directors:
            </MudText>

            <DeveloperQuote Model="@DeveloperAvatar.Delta"
                            Time="@_quoteTime.Humanize()">
                ...
            </DeveloperQuote>

            <DeveloperQuote Model="@DeveloperAvatar.KronnY"
                            Time="@_quoteTime.Humanize()">
                ...
            </DeveloperQuote>

            <DeveloperQuote Model="@DeveloperAvatar.Watch"
                            Time="@_quoteTime.Humanize()">
                ...
            </DeveloperQuote>

            <MudButton
                Variant="@Variant.Outlined"
                Color="@Color.Success"
                Href="@ExternalLinkHelper.JoinArkanisUri.ToString()"
                Target="_blank">
                Join us at Arkanis Corporation
            </MudButton>
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@Cancel">Close</MudButton>
    </DialogActions>
</MudDialog>

@code
{

    private const string ContentId = "anniversary-dialog";

    private DateTime _quoteTime = new(2025, 10, 12);

    [CascadingParameter]
    public required IMudDialogInstance MudDialog { get; set; }

    private void Cancel()
        => MudDialog.Cancel();

    public static async Task<DialogResult> ShowAsync(IDialogService dialogService)
    {
        var dialogOptions = new DialogOptions
        {
            FullWidth = true,
            MaxWidth = MaxWidth.Small,
            CloseOnEscapeKey = true,
        };

        return await ShowAsync(dialogService, dialogOptions);
    }

    private static async Task<DialogResult> ShowAsync(IDialogService dialogService, DialogOptions dialogOptions)
    {
        var dialogRef = await dialogService.ShowAsync<AnniversaryDialog>(null, dialogOptions);
        return await dialogRef.Result ?? DialogResult.Cancel();
    }

}
