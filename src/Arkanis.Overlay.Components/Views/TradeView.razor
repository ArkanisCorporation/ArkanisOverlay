@using Arkanis.Overlay.Common
@using Arkanis.Overlay.Components.Views.Components
@using Arkanis.Overlay.Domain.Abstractions.Game
@using Arkanis.Overlay.Domain.Enums
@using Humanizer
@inject IGameEntityRepository<GameTradeRoute> TradeRouteRepository

<!--suppress CssUnusedSymbol, CssUnresolvedCustomProperty -->
<style>
    .mud-paper,
    .mud-expansion-panels {
        animation: 250ms fadeInDown;
    }

    :not(:hover) * .visible-on-parent-hover {
        display: none;
    }

    .mud-tabs-tabbar-content {
        overflow: visible !important;
    }

    .mud-expand-panel:not(:last-child).mud-expand-panel-border {
        border-bottom: 1px solid var(--mud-palette-lines-default) !important;
    }

    .mud-expand-panel.mud-panel-expanded {
        margin-bottom: 0;
    }

    .mud-expand-panel-content {
        padding-bottom: 0 !important;
    }
</style>

<div>
    <MudStack Spacing="6"
              Class="py-6"
              Justify="@Justify.FlexStart"
              AlignItems="@AlignItems.Center">

        <MudTabs Rounded>
            <MudTabPanel>
                <TabWrapperContent>
                    <MudBadge Origin="@Origin.TopCenter"
                              Color="@Color.Warning"
                              Content="4"
                              Overlap>
                        @context
                    </MudBadge>
                </TabWrapperContent>
                <TabContent>
                    Trade Routes
                </TabContent>
            </MudTabPanel>
            <MudTabPanel>
                <TabContent>
                    Ledger
                </TabContent>
            </MudTabPanel>
        </MudTabs>

        <MudPaper Style="max-width: 60vw">
            <div class="pa-4">
                <MudStack AlignItems="@AlignItems.Center"
                          Class="mr-4"
                          Row>
                    <MudChip
                        T="int"
                        Value="4"
                        Color="@Color.Info"/>
                    <MudText Typo="@Typo.h4">
                        Trades In Progress
                    </MudText>
                </MudStack>
                <MudText Typo="@Typo.body1"
                         Class="px-2">
                    All of the items below have been added during a recent play session.
                    However, they have not yet been assigned a permanent storage within the universe.
                    Please review the inventory table below and either remove or transfer the entries to
                    a designated permanent storage.
                </MudText>
            </div>
            <MudDivider/>
            <MudExpansionPanels Gutters="false">
                @{ var panelIndex = 0; }
                @foreach (var route in FilteredRoutes.Take(4))
                {
                    <MudExpansionPanel Gutters="false"
                                       Expanded="@(panelIndex++ == 0)">
                        <TitleContent>
                            <MudStack AlignItems="@AlignItems.Center"
                                      Class="mr-4"
                                      Row>
                                <MudChip T="string">
                                    <QuantityLabel
                                        Model="@(new Quantity(route.Origin.CargoUnitsAvailable, Quantity.UnitType.StandardCargoUnit))"/>
                                </MudChip>
                                <MudStack Spacing="0">
                                    <GameEntityNameLabel
                                        Model="@route.Name"
                                        Style=""/>
                                    <MudText Typo="@Typo.body2" Class="text-secondary">
                                        Currently: Travelling to destination terminal
                                    </MudText>
                                </MudStack>
                                <MudSpacer/>
                                <MudStack Spacing="0"
                                          Class="h-100">
                                    <MudText Typo="@Typo.h6" Color="@Color.Error" Class="mb-n3">
                                        <GamePriceLabel
                                            Model="@(route.Origin.Price * route.Origin.CargoUnitsAvailable)"/>
                                    </MudText>
                                    <MudText Typo="@Typo.h6" Color="@Color.Success">
                                        <GamePriceLabel
                                            Model="@(route.Destination.Price * route.Origin.CargoUnitsAvailable)"/>
                                    </MudText>
                                </MudStack>
                            </MudStack>
                        </TitleContent>
                        <ChildContent>
                            <MudDivider/>
                            <MudStepper>
                                <ChildContent>
                                    <MudStep Title="Reach origin"
                                             Style="background-size: cover; background-image: url(https://d3a1t0pe7zmm0w.cloudfront.net/terminals/443/images/3dbebf093ab1c6a6139cd3522a1ed7b3a2f96eae.jpg);  background-color: rgba(0,0,0,0.75); background-blend-mode: overlay;">
                                        <MudStack AlignItems="@AlignItems.Center"
                                                  Justify="@Justify.Center"
                                                  Style="height: 25vh"
                                                  Spacing="6">
                                            <MudStack AlignItems="AlignItems.Center"
                                                      Spacing="0">
                                                <MudText Typo="@Typo.h5">
                                                    Travel
                                                </MudText>
                                                <MudText Typo="@Typo.body2">
                                                    Reach the origin purchase terminal at
                                                </MudText>
                                            </MudStack>
                                            <GameEntityNameLabel
                                                Model="@route.Origin.Terminal.Name"/>
                                            <div>
                                                <MudButton StartIcon="@MaterialIcons.Filled.LocationPin"
                                                           Color="@Color.Success"
                                                           Size="@Size.Large">
                                                    I am at the terminal
                                                </MudButton>
                                            </div>
                                        </MudStack>
                                    </MudStep>
                                    <MudStep Title="Obtain cargo">
                                        <MudStack AlignItems="@AlignItems.Center"
                                                  Justify="@Justify.Center"
                                                  Style="height: 25vh"
                                                  Spacing="6">
                                            <MudStack AlignItems="AlignItems.Center"
                                                      Spacing="0">
                                                <MudText Typo="@Typo.h5">
                                                    Purchase
                                                </MudText>
                                                <MudText Typo="@Typo.body2">
                                                    Make a purchase of the selected commodity
                                                </MudText>
                                            </MudStack>
                                            <GameEntityNameLabel
                                                Model="@route.Commodity.Name"/>
                                            <MudGrid Style="min-width: 400px; max-width: 75%;">
                                                <MudItem xs="12" sm="6" md="4">
                                                    <MudTextField
                                                        Label="Quantity purchased (SCU)"
                                                        Value="@route.Origin.CargoUnitsAvailable"
                                                        InputType="@InputType.Number"
                                                        Required/>
                                                </MudItem>
                                                <MudItem xs="12" sm="6" md="4">
                                                    <MudTextField
                                                        Label="Purchase price (per SCU)"
                                                        Value="@route.Origin.Price.Amount"
                                                        InputType="@InputType.Number"
                                                        Required/>
                                                </MudItem>
                                                <MudItem xs="12" md="4">
                                                    <MudStack AlignItems="@AlignItems.End"
                                                              Justify="@Justify.Center"
                                                              Class="h-100">
                                                        <MudText Typo="@Typo.h6"
                                                                 Color="@Color.Error">
                                                            =
                                                            <GamePriceLabel
                                                                Model="@(route.Origin.Price * route.Origin.CargoUnitsAvailable)"/>
                                                        </MudText>
                                                    </MudStack>
                                                </MudItem>
                                                <MudItem xs="12" sm="6">
                                                    <MudSelect T="TerminalInventoryStatus"
                                                               Label="Remaining stock status"
                                                               Value="@route.Origin.InventoryStatus"
                                                               HelperText="Stock status reported by the terminal AFTER the purchase">
                                                        @foreach (var status in Enum.GetValues<TerminalInventoryStatus>().Where(x => x is not TerminalInventoryStatus.Unknown))
                                                        {
                                                            <MudSelectItem Value="@status">
                                                                @status.Humanize()
                                                            </MudSelectItem>
                                                        }
                                                    </MudSelect>
                                                </MudItem>
                                                <MudItem xs="12" sm="6">
                                                    <MudTextField
                                                        Label="Remaining stock (SCU)"
                                                        Value="@route.Origin.CargoUnitsAvailable"
                                                        HelperText="Stock reported by the terminal AFTER the purchase"/>
                                                </MudItem>
                                            </MudGrid>
                                            <MudCheckBox T="bool">
                                                <MudStack Spacing="0">
                                                    <MudText>
                                                        I have verified the provided values
                                                    </MudText>
                                                    <MudText Typo="Typo.caption" Class="text-secondary">
                                                        By providing these values you are contributing to the accuracy
                                                        of the trade routes for all players
                                                    </MudText>
                                                </MudStack>
                                            </MudCheckBox>
                                            <MudButton StartIcon="@MaterialIcons.Filled.AddShoppingCart"
                                                       Color="@Color.Success"
                                                       Size="@Size.Large">
                                                I have made the purchase
                                            </MudButton>
                                        </MudStack>
                                    </MudStep>
                                    <MudStep Title="Load">
                                        <MudStack AlignItems="@AlignItems.Center"
                                                  Justify="@Justify.Center"
                                                  Style="height: 25vh"
                                                  Spacing="6">
                                            <MudStack AlignItems="AlignItems.Center"
                                                      Spacing="0">
                                                <MudText Typo="@Typo.h5">
                                                    Load cargo
                                                </MudText>
                                                <MudText Typo="@Typo.body2">
                                                    Load purchased cargo to your ship at
                                                </MudText>
                                            </MudStack>
                                            <GameEntityNameLabel
                                                Model="@route.Origin.Terminal.Name"/>
                                            <MudCheckBox T="bool">
                                                <MudStack Spacing="0">
                                                    <MudText>
                                                        I have used auto-load
                                                    </MudText>
                                                </MudStack>
                                            </MudCheckBox>
                                            <MudButton StartIcon="@MaterialIcons.Filled.FrontLoader"
                                                       Color="@Color.Success"
                                                       Size="@Size.Large">
                                                I have all the cargo loaded
                                            </MudButton>
                                        </MudStack>
                                    </MudStep>
                                    <MudStep Title="Reach destination"
                                             Style="background-size: cover; background-image: url(https://d3a1t0pe7zmm0w.cloudfront.net/terminals/1/images/524f464d025618baa4bada1b8afe43a4164af29f.jpg);  background-color: rgba(0,0,0,0.75); background-blend-mode: overlay;">
                                        <MudStack AlignItems="@AlignItems.Center"
                                                  Justify="@Justify.Center"
                                                  Style="height: 25vh"
                                                  Spacing="6">
                                            <MudStack AlignItems="AlignItems.Center"
                                                      Spacing="0">
                                                <MudText Typo="@Typo.h5">
                                                    Travel @route.Distance Gm
                                                </MudText>
                                                <MudText Typo="@Typo.body2">
                                                    Reach the destination at
                                                </MudText>
                                            </MudStack>
                                            <GameEntityNameLabel
                                                Model="@route.Destination.Terminal.Parent!.Name"/>
                                            <MudButton StartIcon="@MaterialIcons.Filled.LocationPin"
                                                       Color="@Color.Success"
                                                       Size="@Size.Large">
                                                I am at the destination
                                            </MudButton>
                                        </MudStack>
                                    </MudStep>
                                    <MudStep Title="Unload">
                                        <MudStack AlignItems="@AlignItems.Center"
                                                  Justify="@Justify.Center"
                                                  Style="height: 25vh"
                                                  Spacing="6">
                                            <MudStack AlignItems="AlignItems.Center"
                                                      Spacing="0">
                                                <MudText Typo="@Typo.h5">
                                                    Unload cargo
                                                </MudText>
                                                <MudText Typo="@Typo.body2">
                                                    Unload purchased cargo from your ship at
                                                </MudText>
                                            </MudStack>
                                            <GameEntityNameLabel
                                                Model="@route.Destination.Terminal.Parent!.Name"/>
                                            <MudCheckBox T="bool">
                                                <MudStack Spacing="0">
                                                    <MudText>
                                                        I will use auto-load
                                                    </MudText>
                                                </MudStack>
                                            </MudCheckBox>
                                            <MudButton StartIcon="@MaterialSymbols.Outlined.GarageDoor"
                                                       Color="@Color.Success"
                                                       Size="@Size.Large">
                                                I have the ship stored
                                            </MudButton>
                                            <MudButton StartIcon="@MaterialIcons.Filled.FrontLoader"
                                                       Color="@Color.Success"
                                                       Size="@Size.Large">
                                                I have all the cargo unloaded
                                            </MudButton>
                                        </MudStack>
                                    </MudStep>
                                    <MudStep Title="Sell cargo">
                                        <MudStack AlignItems="@AlignItems.Center"
                                                  Justify="@Justify.Center"
                                                  Style="height: 25vh"
                                                  Spacing="6">
                                            <MudStack AlignItems="AlignItems.Center"
                                                      Spacing="0">
                                                <MudText Typo="@Typo.h5">
                                                    Sale
                                                </MudText>
                                                <MudText Typo="@Typo.body2">
                                                    Sell the transported commodity
                                                </MudText>
                                            </MudStack>
                                            <MudStack AlignItems="@AlignItems.Center"
                                                      Spacing="6"
                                                      Row>
                                                <GameEntityNameLabel
                                                    Model="@route.Commodity.Name"/>
                                                <MudText>
                                                    at
                                                </MudText>
                                                <GameEntityNameLabel
                                                    Model="@route.Destination.Terminal.Name"/>
                                            </MudStack>
                                            <MudGrid Style="min-width: 400px; max-width: 75%;">
                                                <MudItem xs="12" sm="6" md="4">
                                                    <MudTextField
                                                        Label="Quantity sold (SCU)"
                                                        Value="@route.Destination.CargoUnitsAvailable"
                                                        InputType="@InputType.Number"
                                                        Required/>
                                                </MudItem>
                                                <MudItem xs="12" sm="6" md="4">
                                                    <MudTextField
                                                        Label="Sale price (per SCU)"
                                                        Value="@route.Destination.Price.Amount"
                                                        InputType="@InputType.Number"
                                                        Required/>
                                                </MudItem>
                                                <MudItem xs="12" md="4">
                                                    <MudStack AlignItems="@AlignItems.End"
                                                              Justify="@Justify.Center"
                                                              Class="h-100">
                                                        <MudText Typo="@Typo.h6"
                                                                 Color="@Color.Success">
                                                            =
                                                            <GamePriceLabel
                                                                Model="@(route.Destination.Price * route.Destination.CargoUnitsAvailable)"/>
                                                        </MudText>
                                                    </MudStack>
                                                </MudItem>
                                                <MudItem xs="12" sm="6">
                                                    <MudSelect T="TerminalInventoryStatus"
                                                               Label="New stock status"
                                                               Value="@route.Destination.InventoryStatus"
                                                               HelperText="Stock status reported by the terminal AFTER the sale">
                                                        @foreach (var status in Enum.GetValues<TerminalInventoryStatus>().Where(x => x is not TerminalInventoryStatus.Unknown))
                                                        {
                                                            <MudSelectItem Value="@status">
                                                                @status.Humanize()
                                                            </MudSelectItem>
                                                        }
                                                    </MudSelect>
                                                </MudItem>
                                                <MudItem xs="12" sm="6">
                                                    <MudTextField
                                                        Label="New stock (SCU)"
                                                        Value="@route.Destination.CargoUnitsAvailable"
                                                        HelperText="Stock reported by the terminal AFTER the sale"/>
                                                </MudItem>
                                            </MudGrid>
                                            <MudCheckBox T="bool">
                                                <MudStack Spacing="0">
                                                    <MudText>
                                                        I have verified the provided values
                                                    </MudText>
                                                    <MudText Typo="Typo.caption" Class="text-secondary">
                                                        By providing these values you are contributing to the accuracy
                                                        of the trade routes for all players
                                                    </MudText>
                                                </MudStack>
                                            </MudCheckBox>
                                            <MudButton StartIcon="@MaterialIcons.Filled.ShoppingCartCheckout"
                                                       Color="@Color.Warning"
                                                       Size="@Size.Large">
                                                I have made partial sale
                                            </MudButton>
                                            <MudButton StartIcon="@MaterialIcons.Filled.ShoppingCartCheckout"
                                                       Color="@Color.Success"
                                                       Size="@Size.Large">
                                                I have made the sale
                                            </MudButton>
                                        </MudStack>
                                    </MudStep>
                                </ChildContent>
                                <CompletedContent>
                                    <MudGrid>
                                        <MudItem xs="12" md="6">
                                            <div style="height: 25vh; overflow: auto">
                                                <MudTimeline TimelinePosition="@TimelinePosition.Left">
                                                    <MudTimelineItem Color="@Color.Info"
                                                                     Size="@Size.Medium">
                                                        <ItemDot>
                                                            <MudIcon
                                                                Icon="@MaterialIcons.Filled.Check"
                                                                Size="@Size.Medium"/>
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudStack Spacing="0">
                                                                <MudText>
                                                                    Accepted
                                                                </MudText>
                                                                <MudText Typo="Typo.caption" Class="text-secondary">
                                                                    @((DateTimeOffset.Now + ApplicationConstants.GameTimeOffset).ToString("F")),
                                                                    Earth, Sol
                                                                </MudText>
                                                            </MudStack>
                                                        </ItemContent>
                                                    </MudTimelineItem>
                                                    <MudTimelineItem Color="@Color.Info"
                                                                     Size="@Size.Medium">
                                                        <ItemDot>
                                                            <MudIcon
                                                                Icon="@MaterialIcons.Filled.FlightLand"
                                                                Size="@Size.Medium"/>
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudStack Spacing="0">
                                                                <MudText>
                                                                    Reached origin terminal
                                                                </MudText>
                                                                <MudText Typo="Typo.caption" Class="text-secondary">
                                                                    @((DateTimeOffset.Now + ApplicationConstants.GameTimeOffset).ToString("F")),
                                                                    Earth, Sol
                                                                </MudText>
                                                            </MudStack>
                                                        </ItemContent>
                                                    </MudTimelineItem>
                                                    <MudTimelineItem Color="@Color.Warning"
                                                                     Size="@Size.Medium">
                                                        <ItemDot>
                                                            <MudIcon
                                                                Icon="@MaterialIcons.Filled.AddShoppingCart"
                                                                Size="@Size.Medium"/>
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudStack Spacing="0">
                                                                <MudText>
                                                                    Cargo acquired
                                                                </MudText>
                                                                <MudText Typo="Typo.caption" Class="text-secondary">
                                                                    @((DateTimeOffset.Now + ApplicationConstants.GameTimeOffset).ToString("F")),
                                                                    Earth, Sol
                                                                </MudText>
                                                            </MudStack>
                                                        </ItemContent>
                                                    </MudTimelineItem>
                                                    <MudTimelineItem Color="@Color.Info"
                                                                     Size="@Size.Medium">
                                                        <ItemDot>
                                                            <MudIcon
                                                                Icon="@MaterialIcons.Filled.FrontLoader"
                                                                Size="@Size.Medium"/>
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudStack Spacing="0">
                                                                <MudText>
                                                                    Cargo loaded
                                                                </MudText>
                                                                <MudText Typo="Typo.caption" Class="text-secondary">
                                                                    @((DateTimeOffset.Now + ApplicationConstants.GameTimeOffset).ToString("F")),
                                                                    Earth, Sol
                                                                </MudText>
                                                            </MudStack>
                                                        </ItemContent>
                                                    </MudTimelineItem>
                                                    <MudTimelineItem Color="@Color.Info"
                                                                     Size="@Size.Medium">
                                                        <ItemDot>
                                                            <MudIcon
                                                                Icon="@MaterialIcons.Filled.FlightLand"
                                                                Size="@Size.Medium"/>
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudStack Spacing="0">
                                                                <MudText>
                                                                    Reached destination terminal
                                                                </MudText>
                                                                <MudText Typo="Typo.caption" Class="text-secondary">
                                                                    @((DateTimeOffset.Now + ApplicationConstants.GameTimeOffset).ToString("F")),
                                                                    Earth, Sol
                                                                </MudText>
                                                            </MudStack>
                                                        </ItemContent>
                                                    </MudTimelineItem>
                                                    <MudTimelineItem Color="@Color.Info"
                                                                     Size="@Size.Medium">
                                                        <ItemDot>
                                                            <MudIcon
                                                                Icon="@MaterialIcons.Filled.FrontLoader"
                                                                Size="@Size.Medium"/>
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudStack Spacing="0">
                                                                <MudText>
                                                                    Cargo unloaded
                                                                </MudText>
                                                                <MudText Typo="Typo.caption" Class="text-secondary">
                                                                    @((DateTimeOffset.Now + ApplicationConstants.GameTimeOffset).ToString("F")),
                                                                    Earth, Sol
                                                                </MudText>
                                                            </MudStack>
                                                        </ItemContent>
                                                    </MudTimelineItem>
                                                    <MudTimelineItem Color="@Color.Success"
                                                                     Size="@Size.Medium">
                                                        <ItemDot>
                                                            <MudIcon
                                                                Icon="@MaterialIcons.Filled.AttachMoney"
                                                                Size="@Size.Medium"/>
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudStack Spacing="0">
                                                                <MudText>
                                                                    Cargo sold
                                                                </MudText>
                                                                <MudText Typo="Typo.caption" Class="text-secondary">
                                                                    @((DateTimeOffset.Now + ApplicationConstants.GameTimeOffset).ToString("F")),
                                                                    Earth, Sol
                                                                </MudText>
                                                            </MudStack>
                                                        </ItemContent>
                                                    </MudTimelineItem>
                                                </MudTimeline>
                                            </div>
                                        </MudItem>
                                        <MudItem xs="12" md="6">
                                            <MudStack Class="h-100 w-100 pt-5">
                                                <MudStack AlignItems="@AlignItems.Center"
                                                          Justify="@Justify.SpaceBetween"
                                                          Class="w-100"
                                                          Row>
                                                    <MudText Typo="Typo.h6">
                                                        Trade run profit
                                                    </MudText>
                                                    <MudText Typo="Typo.h6" Color="@Color.Success">
                                                        <GamePriceLabel Model="@route.Destination.Price"/>
                                                    </MudText>
                                                </MudStack>
                                                <MudStack AlignItems="@AlignItems.Center"
                                                          Justify="@Justify.SpaceBetween"
                                                          Class="w-100"
                                                          Row>
                                                    <MudText Typo="Typo.h6">
                                                        Trade run length
                                                    </MudText>
                                                    <MudText Typo="Typo.h6" Color="@Color.Success">
                                                        @TimeSpan.FromHours(2).Humanize()
                                                    </MudText>
                                                </MudStack>
                                                <MudStack AlignItems="@AlignItems.Center"
                                                          Justify="@Justify.SpaceBetween"
                                                          Class="w-100"
                                                          Row>
                                                    <MudText Typo="Typo.h6">
                                                        Cargo acquired
                                                    </MudText>
                                                    <MudText Typo="Typo.h6" Color="@Color.Success">
                                                        <QuantityLabel
                                                            Model="@(Quantity.FromScu(route.Origin.CargoUnitsAvailable))"/>
                                                    </MudText>
                                                </MudStack>
                                                <MudStack AlignItems="@AlignItems.Center"
                                                          Justify="@Justify.SpaceBetween"
                                                          Class="w-100"
                                                          Row>
                                                    <MudText Typo="Typo.h6">
                                                        Cargo sold
                                                    </MudText>
                                                    <MudText Typo="Typo.h6" Color="@Color.Warning">
                                                        <QuantityLabel
                                                            Model="@(Quantity.FromScu(route.Origin.CargoUnitsAvailable - 10))"/>
                                                    </MudText>
                                                </MudStack>
                                                <MudStack AlignItems="@AlignItems.Center"
                                                          Justify="@Justify.SpaceBetween"
                                                          Class="w-100"
                                                          Row>
                                                    <MudText Typo="Typo.h6">
                                                        Cargo remaining
                                                    </MudText>
                                                    <MudText Typo="Typo.h6" Color="@Color.Error">
                                                        <QuantityLabel
                                                            Model="@(Quantity.FromScu(10))"/>
                                                    </MudText>
                                                </MudStack>
                                                <MudSpacer/>
                                                <MudAlert Severity="@Severity.Error"
                                                          ContentAlignment="HorizontalAlignment.Center">
                                                    There still seem to be some unsold cargo left.
                                                </MudAlert>
                                                <MudButton Variant="@Variant.Outlined"
                                                           Color="@Color.Warning"
                                                           Class="w-100">
                                                    Continue to different destination
                                                </MudButton>
                                                <MudButton Color="@Color.Error"
                                                           Class="w-100">
                                                    Finalize - remaining cargo lost
                                                </MudButton>
                                                <MudButton Color="@Color.Success"
                                                           Class="w-100">
                                                    Finalize - keep cargo in the inventory
                                                </MudButton>
                                                <MudButton Variant="@Variant.Outlined"
                                                           Color="@Color.Success"
                                                           Class="w-100">
                                                    Finalize
                                                </MudButton>
                                            </MudStack>
                                        </MudItem>
                                    </MudGrid>
                                </CompletedContent>
                                @* <ActionContent> *@
                                @* *@
                                @* </ActionContent> *@
                            </MudStepper>
                        </ChildContent>
                    </MudExpansionPanel>
                }
            </MudExpansionPanels>
        </MudPaper>

        <MudPaper Style="position: sticky; top: 0; z-index: 100; min-width: 60vw"
                  Elevation="4"
                  Class="py-2 px-4">
            <MudGrid>
                <MudItem xs="12" md="3">
                    <MudTextField
                        @bind-Value="@_context.CargoCapacity"
                        InputType="@InputType.Number"
                        DebounceInterval="200"
                        OnDebounceIntervalElapsed="RefreshDataAsync"
                        Label="Cargo capacity (SCU)"
                        Placeholder="Used ship capacity"
                        Clearable/>
                </MudItem>
                <MudItem xs="12" md="3">
                    <GameEntitySelectBox
                        Label="Commodity"
                        EntityCategory="@GameEntityCategory.Commodity"
                        Accept="@(commodity => ApplicableCommodities.Contains(commodity))"
                        @bind-Value="@_selectedCommodityEntity"
                        @bind-Value:after="@RefreshDataAsync"/>
                </MudItem>
                <MudItem xs="12" md="3">
                    <GameEntitySelectBox
                        Label="Origin location"
                        EntityCategory="@GameEntityCategory.Location"
                        Accept="@(location => ApplicableOriginLocations.Contains(location))"
                        @bind-Value="@_selectedOriginLocationEntity"
                        @bind-Value:after="@RefreshDataAsync"/>
                </MudItem>
                <MudItem xs="12" md="3">
                    <GameEntitySelectBox
                        Label="Destination location"
                        EntityCategory="@GameEntityCategory.Location"
                        Accept="@(location => ApplicableDestinationLocations.Contains(location))"
                        @bind-Value="@_selectedDestinationLocationEntity"
                        @bind-Value:after="@RefreshDataAsync"/>
                </MudItem>
                <MudItem xs="12" md="7">
                    <MudStack Spacing="2" Row>
                        <MudToggleIconButton
                            @bind-Toggled="@_allowIllegal"
                            @bind-Toggled:after="@RefreshDataAsync"
                            Icon="@Icons.Material.Filled.LocalPolice"
                            Color="@Color.Success"
                            ToggledColor="@Color.Error"/>
                        <MudToggleIconButton
                            @bind-Toggled="@_onlyAutoLoadLocations"
                            @bind-Toggled:after="@RefreshDataAsync"
                            Icon="@Icons.Material.Filled.AutoMode"
                            Color="@Color.Inherit"
                            ToggledColor="@Color.Success"/>
                        <MudDivider Vertical FlexItem/>
                        <MudToggleIconButton
                            @bind-Toggled="@_onlyGroundLocations"
                            @bind-Toggled:after="@RefreshDataAsync"
                            Disabled="@_onlySpaceLocations"
                            Icon="@Icons.Material.Filled.SouthAmerica"
                            Color="@Color.Inherit"
                            ToggledColor="@Color.Warning"/>
                        <MudToggleIconButton
                            @bind-Toggled="@_onlySpaceLocations"
                            @bind-Toggled:after="@RefreshDataAsync"
                            Disabled="@_onlyGroundLocations"
                            Icon="@Icons.Material.Filled.Rocket"
                            Color="@Color.Inherit"
                            ToggledColor="@Color.Warning"/>
                    </MudStack>
                </MudItem>
                <MudItem xs="12" md="5">
                    <SortButton TargetField="@SortField.Profit"
                                @bind-ActiveField="@_sortBy"
                                @bind-Direction="@_sortDirection"
                                OnChange="@RefreshDataAsync">
                        Profit
                    </SortButton>
                    <SortButton TargetField="@SortField.Margin"
                                @bind-ActiveField="@_sortBy"
                                @bind-Direction="@_sortDirection"
                                OnChange="@RefreshDataAsync">
                        Margin
                    </SortButton>
                    <SortButton TargetField="@SortField.Distance"
                                @bind-ActiveField="@_sortBy"
                                @bind-Direction="@_sortDirection"
                                OnChange="@RefreshDataAsync">
                        Distance
                    </SortButton>
                </MudItem>
            </MudGrid>
        </MudPaper>

        <CascadingValue Value="@_context" IsFixed>
            <MudStack Spacing="3"
                      Class="mt-n3"> @* virtualization creates a static first item which offsets the spacing *@
                <Virtualize Items="@FilteredRoutes"
                            ItemSize="64"
                            OverscanCount="20"
                            Context="route">
                    @{
                        var priceOrigin = route.Origin.Price;
                        var priceDestination = route.Destination.Price;
                        var scuReachable = _context.CargoCapacity > 0
                            ? Math.Min(_context.CargoCapacity.Value, route.Origin.CargoUnitsAvailable)
                            : route.Origin.CargoUnitsAvailable;
                    }
                    <MudPaper Class="px-4 focus"
                              tabindex="0">
                        <div style="min-height: 64px; align-content: center;">
                            <div style="display: grid; grid-template-columns: 4fr 1fr 1fr 1fr 4fr min-content;"
                                 class="align-center gap-3">
                                <div style="grid-column: 1">
                                    <TradeRouteParty
                                        Model="@route.Origin"
                                        Route="@route"
                                        Side="@TradeRouteParty.PartySide.Origin"
                                        Spacing="6"/>
                                </div>
                                <div style="grid-column: 2">
                                    <MudStack Justify="@Justify.Center"
                                              AlignItems="@AlignItems.End"
                                              Class="text-right h-100"
                                              Spacing="0">
                                        <MudText Typo="Typo.inherit" Color="@Color.Error">
                                            <GamePriceLabel
                                                Model="@(priceOrigin * scuReachable)"
                                                Decimals="1"/>
                                        </MudText>
                                    </MudStack>
                                </div>
                                <div style="grid-column: 3">
                                    <MudStack AlignItems="@AlignItems.Center"
                                              Justify="Justify.Center"
                                              Class="h-100 mx-3"
                                              Spacing="0">
                                        <MudText Typo="@Typo.body2" Class="my-n1 no-wrap text-secondary">
                                            <GameEntityNameLabel
                                                Typo="@Typo.inherit"
                                                Model="@route.Commodity.Name"
                                                Style="height: initial; z-index: 10"
                                                PreferCode/>
                                        </MudText>
                                        <MudIcon
                                            Icon="@Icons.Material.Filled.ArrowRightAlt"
                                            Size="@Size.Large"
                                            Class="my-n1"/>
                                        @if (route.Distance is { } distance)
                                        {
                                            <MudText Typo="@Typo.body2"
                                                     Class="my-n1 no-wrap">
                                                @distance Gm
                                            </MudText>
                                        }
                                    </MudStack>
                                </div>
                                <div style="grid-column: 4" class="d-flex justify-start">
                                    <MudStack Spacing="0"
                                              Class="text-right">
                                        <MudText Typo="Typo.inherit">
                                            <GamePriceLabel
                                                Model="@(priceDestination * scuReachable)"
                                                Decimals="1"/>
                                        </MudText>
                                        <MudText Typo="Typo.inherit"
                                                 Color="@Color.Success"
                                                 Class="no-wrap">
                                            <GamePriceLabel
                                                Model="@(priceDestination * scuReachable - priceOrigin * scuReachable)"
                                                Prefix="+"
                                                Decimals="1"/>
                                        </MudText>
                                    </MudStack>
                                </div>
                                <div style="grid-column: 5">
                                    <TradeRouteParty
                                        Model="@route.Destination"
                                        Route="@route"
                                        Side="@TradeRouteParty.PartySide.Destination"
                                        Class="flex-grow-1"
                                        Spacing="6"/>
                                </div>
                                <div style="grid-column: 6">
                                    <MudStack Spacing="2"
                                              AlignItems="@AlignItems.Center"
                                              Justify="@Justify.FlexEnd"
                                              Class="h-100 mr-n2"
                                              Row>

                                        <MudDivider
                                            FlexItem
                                            Vertical/>

                                        <MudTooltip
                                            Text="@("Show matching results within/at")"
                                            Placement="@Placement.Top">
                                            <MudIconButton
                                                Icon="@Icons.Material.Filled.AirlineStops"
                                                Class="focus"
                                                tabindex="1"/>
                                        </MudTooltip>
                                    </MudStack>
                                </div>
                            </div>
                        </div>
                    </MudPaper>
                </Virtualize>
            </MudStack>
        </CascadingValue>
    </MudStack>
</div>

@code
{
    private bool _allowIllegal;
    private bool _onlyGroundLocations;
    private bool _onlySpaceLocations;
    private bool _onlyAutoLoadLocations;

    private SortField _sortBy;
    private SortButton<SortField>.SortDirection _sortDirection;

    private IGameEntity? _selectedCommodityEntity;
    private IGameEntity? _selectedOriginLocationEntity;
    private IGameEntity? _selectedDestinationLocationEntity;

    private IGameLocation? SelectedOriginLocation
        => _selectedOriginLocationEntity as IGameLocation;

    private IGameLocation? SelectedDestinationLocation
        => _selectedDestinationLocationEntity as IGameLocation;

    private ICollection<IGameLocation> AllLocations { get; set; } = [];
    private ICollection<IGameLocation> ApplicableOriginLocations { get; set; } = [];
    private ICollection<IGameLocation> ApplicableDestinationLocations { get; set; } = [];

    private GameCommodity[] ApplicableCommodities { get; set; } = [];

    private GameTradeRoute[] AllRoutes { get; set; } = [];
    private GameTradeRoute[] FilteredRoutes { get; set; } = [];

    private readonly SearchContext _context = new();

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        AllRoutes = await TradeRouteRepository.GetAllAsync()
            .Where(x => x.Destination.Price > x.Origin.Price)
            .ToArrayAsync();

        AllLocations = AllRoutes
            .SelectMany(x => new[] { x.Origin.Terminal, x.Destination.Terminal })
            .Distinct()
            .ToArray();

        await RefreshDataAsync();
    }

    private async Task RefreshDataAsync()
    {
        await Task.CompletedTask;
        _context.Commodity = _selectedCommodityEntity as GameCommodity;
        _context.OriginLocation = SelectedOriginLocation;
        _context.DestinationLocation = SelectedDestinationLocation;

        ApplicableCommodities = AllRoutes
            .Where(FilterByOrigin)
            .Where(FilterByDestination)
            .Where(FilterByPropertiesOrigin)
            .Select(x => x.Commodity)
            .Distinct()
            .ToArray();

        ApplicableOriginLocations = AllRoutes
            .Where(FilterByDestination)
            .Where(FilterByCommodity)
            .Where(FilterByPropertiesOrigin)
            .Select(x => x.Origin.Terminal)
            .Distinct()
            .SelectMany(x => (IEnumerable<IGameLocation>) [x, ..x.Parents])
            .Distinct()
            .ToArray();

        ApplicableDestinationLocations = AllRoutes
            .Where(FilterByOrigin)
            .Where(FilterByCommodity)
            .Where(FilterByPropertiesOrigin)
            .Select(x => x.Destination.Terminal)
            .Distinct()
            .SelectMany(x => (IEnumerable<IGameLocation>) [x, ..x.Parents])
            .Distinct()
            .ToArray();

        var orderByDirection = _sortDirection == SortButton<SortField>.SortDirection.Descending || _sortBy == SortField.None
            ? OrderByDirection.Descending
            : OrderByDirection.Ascending;

        FilteredRoutes = AllRoutes
            .Where(FilterByOrigin)
            .Where(FilterByDestination)
            .Where(FilterByCommodity)
            .Where(FilterByPropertiesOrigin)
            .OrderBy(Order, orderByDirection)
            .ToArray();
    }

    private double Order(GameTradeRoute x)
        => _sortBy switch
        {
            SortField.Margin => x.PriceMarginPercent,
            SortField.Distance => x.Distance ?? double.MaxValue,
            SortField.Profit => Math.Min(_context.CargoCapacity ?? int.MaxValue, x.Origin.CargoUnitsAvailable) * (x.Destination.Price.Amount - x.Origin.Price.Amount),
            _ => x.PriceReturnOnInvestmentPercent * x.Origin.Price.Amount,
        };

    bool FilterByOrigin(GameTradeRoute x)
        => SelectedOriginLocation is null || SelectedOriginLocation.IsOrContains(x.Origin.Terminal);

    bool FilterByDestination(GameTradeRoute x)
        => SelectedDestinationLocation is null || SelectedDestinationLocation.IsOrContains(x.Destination.Terminal);

    bool FilterByPropertiesOrigin(GameTradeRoute x)
        => (_allowIllegal || !x.Commodity.IsIllegal)
           && (!_onlyGroundLocations || (x.Origin.Terminal.IsOnGround && x.Destination.Terminal.IsOnGround))
           && (!_onlySpaceLocations || (x.Origin.Terminal.IsInSpace && x.Destination.Terminal.IsInSpace))
           && (!_onlyAutoLoadLocations || (x.Origin.Terminal.IsAutoLoad && x.Destination.Terminal.IsAutoLoad));

    bool FilterByCommodity(GameTradeRoute x)
        => _selectedCommodityEntity is null || x.Commodity == _selectedCommodityEntity;

    public class SearchContext
    {
        public int? CargoCapacity { get; set; }
        public GameCommodity? Commodity { get; set; }
        public IGameLocation? OriginLocation { get; set; }
        public IGameLocation? DestinationLocation { get; set; }
    }

    public enum SortField
    {
        None,
        Margin,
        Profit,
        Distance,
    }
}
