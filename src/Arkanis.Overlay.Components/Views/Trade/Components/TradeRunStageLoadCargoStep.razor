@using Arkanis.Overlay.Domain.Abstractions.Game
@inherits TradeRunStageComponent<TradeRun.AcquisitionStage>

<MudStep Title="@Title"
         Completed="@IsCompleted"
         Disabled="@IsDisabled">
    <MudStack AlignItems="@AlignItems.Center"
              Justify="@Justify.Center"
              Spacing="6">
        <MudStack AlignItems="AlignItems.Center"
                  Spacing="0">
            <MudText Typo="@Typo.h5">
                @StepTitle
            </MudText>
            <MudText Typo="@Typo.body2">
                @Description
            </MudText>
        </MudStack>
        <GameEntityNameLabel
            Model="@Location.Name"/>
        <MudCheckBox @bind-Value="@Stage.UsedAutoload"
                     @bind-Value:after="@UpdateStageAsync">
            <MudStack Spacing="0">
                <MudText>
                    I have used auto-load
                </MudText>
            </MudStack>
        </MudCheckBox>
        <MudButton StartIcon="@MaterialIcons.Filled.Forklift"
                   OnClick="@OnTransferredClick"
                   Color="@Color.Success"
                   Size="@Size.Large">
            @if (Stage.UsedAutoload)
            {
                <MudText Typo="@Typo.inherit">
                    The cargo transfer has finished
                </MudText>
            }
            else
            {
                <MudText Typo="@Typo.inherit">
                    I have loaded the cargo
                </MudText>
            }
        </MudButton>
    </MudStack>
</MudStep>

@code
{

    private bool IsCompleted
        => Stage.TransferredAt is not null;

    private bool IsDisabled
        => IsCompleted;

    [Parameter]
    [EditorRequired]
    public required IGameLocation Location { get; set; }

    [Parameter]
    public string Title { get; set; } = "Load cargo";

    [Parameter]
    public string Description { get; set; } = "Load purchased cargo to your ship at";

    [Parameter]
    public string StepTitle { get; set; } = "Load";

    private async Task OnTransferredClick()
    {
        Stage.TransferredAt = DateTimeOffset.Now;
        await NextStepAsync();
    }

}
